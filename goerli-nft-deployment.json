{
  "network": "goerli",
  "contract": {
    "name": "KeepersContract",
    "address": "0x2C034311e1456b8b533cDD3D7056bafa1BAD5544",
    "signerAddress": "0xb66134249278637eeC3086477f1069775fA6037A",
    "abi": [
      "constructor(string _name, string _symbol, address _usdcTokenAddress)",
      "error ApprovalCallerNotOwnerNorApproved()",
      "error ApprovalQueryForNonexistentToken()",
      "error BalanceQueryForZeroAddress()",
      "error InvalidQueryRange()",
      "error MintERC2309QuantityExceedsLimit()",
      "error MintToZeroAddress()",
      "error MintZeroQuantity()",
      "error OwnerQueryForNonexistentToken()",
      "error OwnershipNotInitializedForExtraData()",
      "error TransferCallerNotOwnerNorApproved()",
      "error TransferFromIncorrectOwner()",
      "error TransferToNonERC721ReceiverImplementer()",
      "error TransferToZeroAddress()",
      "error URIQueryForNonexistentToken()",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "function approve(address to, uint256 tokenId) payable",
      "function balanceOf(address owner) view returns (uint256)",
      "function explicitOwnershipOf(uint256 tokenId) view returns (tuple(address addr, uint64 startTimestamp, bool burned, uint24 extraData))",
      "function explicitOwnershipsOf(uint256[] tokenIds) view returns (tuple(address addr, uint64 startTimestamp, bool burned, uint24 extraData)[])",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function isApprovedForAll(address owner, address operator) view returns (bool)",
      "function maxMintQuantity() view returns (uint256)",
      "function maxSupply() view returns (uint256)",
      "function merkleRoot() view returns (bytes32)",
      "function mint(address to, uint256 quantity, bytes32[] merkleProof)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function paymentRecepient() view returns (address)",
      "function premint(address to, uint256 quantity)",
      "function renounceOwnership()",
      "function safeTransferFrom(address from, address to, uint256 tokenId) payable",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) payable",
      "function setApprovalForAll(address operator, bool approved)",
      "function setBaseUri(string newBaseUri)",
      "function setIsPublic(bool _isPublic)",
      "function setMaxMintQuantity(uint256 _maxMintQuantity)",
      "function setMaxSupply(uint256 _maxSupply)",
      "function setMerkleRoot(bytes32 _merkleRoot)",
      "function setPaymentRecepient(address _paymentRecepient)",
      "function setUsdcFee(uint256 _usdcFee)",
      "function setUsdcTokenAddress(address _usdcTokenAddress)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function tokensOfOwner(address owner) view returns (uint256[])",
      "function tokensOfOwnerIn(address owner, uint256 start, uint256 stop) view returns (uint256[])",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 tokenId) payable",
      "function transferOwnership(address newOwner)",
      "function usdcFee() view returns (uint256)",
      "function usdcTokenAddress() view returns (address)"
    ]
  }
}
